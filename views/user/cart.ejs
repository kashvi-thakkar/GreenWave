<head>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <link
    href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css"
    rel="stylesheet"
  />
  <style>
    @import url("https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
    body {
      font-family: "Merriweather", serif;
    }
  </style>
</head>
<body>
  <section class="cart-section light-card">
    <div class="container">
      <h1 class="cart-title">Your Shopping Cart</h1>
      <% if (cart && cart.items.length > 0) { %>
      <div class="table-responsive">
        <table class="table">
          <thead>
            <tr>
              <th class="text-white">Product</th>
              <th class="text-white">Quantity</th>
              <th class="text-white">Price</th>
              <th class="text-white">Total</th>
              <th class="text-white">Action</th>
            </tr>
          </thead>
          <tbody>
            <% cart.items.forEach(item => { %>
            <tr data-product-id="<%= item.product._id %>">
              <td><%= item.product.name %></td>
              <td>
                <div class="d-flex">
                  <input
                    type="number"
                    name="quantity"
                    value="<%= item.quantity %>"
                    min="1"
                    max="<%= item.product.stock %>"
                    class="form-control form-control-sm me-2 quantity-input"
                    style="width: 70px"
                    data-price="<%= item.product.price %>"
                  />
                  <button
                    class="btn btn-sm btn-outline-success update-quantity"
                  >
                    Update
                  </button>
                </div>
              </td>
              <td class="price">₹<%= item.product.price.toFixed(2) %></td>
              <td class="item-total">
                ₹<%= (item.quantity * item.product.price).toFixed(2) %>
              </td>
              <td>
                <button
                  class="btn btn-sm btn-danger remove-item"
                  data-product-id="<%= item.product._id %>"
                >
                  Remove
                </button>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>

      <div class="row justify-content-end">
        <div class="col-md-4">
          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Order Summary</h5>
              <p class="card-text">
                Total: ₹<span id="cart-total"
                  ><%= cart.total.toFixed(2) %></span
                >
              </p>
              <a href="/payment" class="btn btn-success w-100"
                >Proceed to Payment</a
              >
            </div>
          </div>
        </div>
      </div>
      <% } else { %>
      <div class="alert alert-info">
        <p class="mb-0">Your cart is empty.</p>
      </div>
      <% } %>

      <a href="/dashboard" class="btn btn-outline-success mt-4"
        >Continue Shopping</a
      >
    </div>
  </section>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const updateButtons = document.querySelectorAll(".update-quantity");
      const removeButtons = document.querySelectorAll(".remove-item");
      const cartTotal = document.getElementById("cart-total");

      updateButtons.forEach((button) => {
        button.addEventListener("click", function () {
          const row = this.closest("tr");
          const quantityInput = row.querySelector(".quantity-input");
          const itemTotal = row.querySelector(".item-total");
          const price = parseFloat(quantityInput.dataset.price);
          const newQuantity = parseInt(quantityInput.value);

          const newItemTotal = (price * newQuantity).toFixed(2);
          itemTotal.textContent = `₹${newItemTotal}`;

          let newCartTotal = 0;
          document.querySelectorAll(".item-total").forEach((total) => {
            newCartTotal += parseFloat(total.textContent.replace("₹", ""));
          });
          cartTotal.textContent = newCartTotal.toFixed(2);
        });
      });
      removeButtons.forEach((button) => {
        button.addEventListener("click", function () {
          const productId = this.dataset.productId;
          const row = this.closest("tr");

          fetch(`/cart/remove/${productId}`, {
            method: "DELETE",
          })
            .then((response) => {
              if (response.ok) {
                row.remove();
                updateCartTotal();

                if (document.querySelectorAll("tbody tr").length === 0) {
                  window.location.reload();
                }
              } else {
                throw new Error("Failed to remove item");
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              alert("An error occurred while removing the item");
            });
        });
      });

      function updateCartTotal() {
        let newTotal = 0;
        document.querySelectorAll(".item-total").forEach((el) => {
          newTotal += parseFloat(el.textContent.replace("₹", ""));
        });
        cartTotal.textContent = newTotal.toFixed(2);
      }
    });
  </script>
</body>
